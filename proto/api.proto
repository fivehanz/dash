syntax="proto3";
package api;

service Users {
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
    rpc GetUser(GetUserRequest) returns (GetUserResponse);
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);

    rpc UpdatePassword(UpdatePasswordRequest) returns (UpdatePasswordResponse);
    // rpc GetAllUsers(GetAllUsersRequest) returns (GetAllUsersResponse);
}

service Auth {
    // rpc Login(LoginRequest) returns (LoginResponse);
}

message CreateUserRequest {
    string email = 1;
    string password = 2;
    string username = 3;
    string name = 4;
}

message CreateUserResponse {
    bool success = 1;
    string id = 2;
}

// ! how to use this?
// message ValidationError {
//     string code = 1;
//     string message = 2;
//     string params = 3;
// } 

message GetUserRequest {
    string id = 1;
}

message User {
    string id = 1;
    string name = 2;
    string username = 3;
    string email = 4;
    uint32 role = 5;
    string profile_image_url = 6;
    string created_at = 7;
    string updated_at = 8;
}

message GetUserResponse {
    bool success = 1;
    optional User user = 2;
    optional string message = 3;
}

message UpdateUserRequest {
    string id = 1;
    optional string name = 2;
    optional string username = 3;
    optional string email = 4;
    optional uint32 role = 5;
    optional string profile_image_url = 6;
}

message UpdateUserResponse {
    bool success = 1;
    string id = 2;
    string message = 3;
}

message DeleteUserRequest {
    string id = 1;
}

message DeleteUserResponse {
    bool success = 1;
    string id = 2;
    string message = 3;
}

message UpdatePasswordRequest {
    string id = 1;
    string old_password = 2;
    string new_password = 3;
}

message UpdatePasswordResponse {
    bool success = 1;
    optional string message = 2;
}

// message GetAllUsersRequest {
// }

// message GetAllUsersResponse {
//     repeated User users = 1;
// }